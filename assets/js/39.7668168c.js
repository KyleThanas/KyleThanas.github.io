(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{239:function(a,t,s){"use strict";s.r(t);var n=s(2),e=Object(n.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"web响应-优化-http-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web响应-优化-http-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Web响应--优化--HTTP/2")]),a._v(" "),s("p",{staticStyle:{"text-align":"left"}},[s("span",[a._v("h1 ")]),s("span",[a._v("下的一些性能调优办法在 ")]),s("span",[a._v("h2 ")]),s("span",[a._v("下会起到反作用。")])]),s("p",{staticStyle:{"text-align":"center"}},[s("img",{staticStyle:{"max-width":"600px",width:"844.8px"},attrs:{alt:"image.png",title:"image.png",src:"https://cdn.nlark.com/yuque/0/2019/png/124615/1563443958748-e17bb455-168c-4211-9268-facdf6e8be98.png#align=left&display=inline&height=507&name=image.png&originHeight=634&originWidth=1056&size=353000&status=done&width=844.8"}})]),s("p",{staticStyle:{"text-align":"left"}},[s("br")]),a._v(" "),s("h2",{attrs:{id:"域名拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名拆分","aria-hidden":"true"}},[a._v("#")]),a._v(" 域名拆分")]),a._v(" "),s("p",[s("span",[a._v("域名拆分是为了利用浏览器对每个域名开启多个连接的能力，以便实现资源的并行下载，绕过 ")]),s("span",[a._v("h1 ")]),s("span",[a._v("的串行化下载的限制。")])]),s("p",[s("strong",[s("span",[a._v("因为 ")])]),s("strong",[s("span",[a._v("HTTP/2 ")])]),s("strong",[s("span",[a._v("采取多路复用，所以域名拆分就不是必要的了")])]),s("span",[a._v("，并且反而会让协议力图实现的目标落空。")])]),a._v(" "),s("h2",{attrs:{id:"资源内联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源内联","aria-hidden":"true"}},[a._v("#")]),a._v(" 资源内联")]),a._v(" "),s("p",[s("span",[a._v("资源内联包括把 ")]),s("span",[a._v("JavaScript")]),s("span",[a._v("、样式，甚至图片插入到 ")]),s("span",[a._v("HTML ")]),s("span",[a._v("页面中，目的是省掉加载外部资源所需的新连接以及请求响应的时间。")])]),s("p",[s("span",[a._v("然而，有些 ")]),s("span",[a._v("Web ")]),s("span",[a._v("性能的最佳实践不推荐使用内联，因为这样会损失更有价值的特性，比如缓存。如果有同一个页面上的重复访问，缓存通常可以减少请求数（而且能够加速页面渲染）。")])]),s("p",[s("strong",[s("span",[a._v("使用 ")])]),s("strong",[s("span",[a._v("h2 ")])]),s("strong",[s("span",[a._v("时的一般原则是避免内联，但是内联也并不一定毫无价值。")])])]),a._v(" "),s("h2",{attrs:{id:"资源合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源合并","aria-hidden":"true"}},[a._v("#")]),a._v(" 资源合并")]),a._v(" "),s("p",[s("span",[a._v("资源合并意味着把几个小文件合并成一个大文件。")]),s("span",[a._v("它与内联很相似，旨在省掉那些加载外部资源的请求响应时间，以及解码 ")]),s("span",[a._v("/ ")]),s("span",[a._v("执行那些资源所消耗的 ")]),s("span",[a._v("CPU ")]),s("span",[a._v("资源。")])]),a._v(" "),s("h2",{attrs:{id:"禁用cookie的域名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用cookie的域名","aria-hidden":"true"}},[a._v("#")]),a._v(" 禁用cookie的域名")]),a._v(" "),s("p",[s("span",[a._v("通过禁用 ")]),s("span",[a._v("cookie ")]),s("span",[a._v("的域名来提供静态资源是一项标准的性能优化最佳实践。尤其是使用 ")]),s("span",[a._v("h1")]),s("span",[a._v("时，你无法压缩首部，而且有些网站使用的 ")]),s("span",[a._v("cookie ")]),s("span",[a._v("大小常常超过单个 ")]),s("span",[a._v("TCP ")]),s("span",[a._v("数据包的限度。"),s("br"),a._v("不过，在 ")]),s("span",[a._v("h2 ")]),s("span",[a._v("下请求首部使用 ")]),s("span",[a._v("HPACK ")]),s("span",[a._v("算法被压缩，会显著减少巨型 ")]),s("span",[a._v("cookie")]),s("span",[a._v("（尤其是当它们在先后请求之间保持不变）的字节数。与此同时，禁用 ")]),s("span",[a._v("cookie ")]),s("span",[a._v("的域名需要额外的主机名称，这意味着将开启更多的连接。")])]),a._v(" "),s("h2",{attrs:{id:"生成精灵图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成精灵图","aria-hidden":"true"}},[a._v("#")]),a._v(" 生成精灵图")]),a._v(" "),s("p",[s("span",[a._v("生成精灵图仍是一种避免小资源请求过多的技术。")]),s("span",[a._v("为了生成精灵图，开发者把较小的图片拼合成较大的图片，然后用 ")]),s("span",[a._v("CSS ")]),s("span",[a._v("选择图片中某个部分展示出来。")])]),s("p",[s("span",[a._v("依据设备及其硬件图形处理能力的不同，精灵图要么非常高效，要么非常低效。如果用 ")]),s("span",[a._v("h2")]),s("span",[a._v("，最佳实践就是避免生成精灵图；主要原因在于，多路复用和首部压")]),s("span",[a._v("缩去掉了大量的请求开销。即便如此，还是有些场景适合使用精灵图。")])]),a._v(" "),s("h2",{attrs:{id:"资源预取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源预取","aria-hidden":"true"}},[a._v("#")]),a._v(" 资源预取")]),a._v(" "),s("p",[s("span",[a._v("资源预取也是一项 ")]),s("span",[a._v("Web ")]),s("span",[a._v("性能优化手段，它“提示”浏览器，只要有可能就继续下载可缓存资源，并把这些资源缓存起来。尽管如此，如果浏览器很忙，或者资源下载花的时间太长，预取请求将会被忽略。资源预取可以在 ")]),s("span",[a._v("HTML ")]),s("span",[a._v("中插入 ")]),s("span",[a._v("link ")]),s("span",[a._v("标签实现：")])]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("/important.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" \n")])])]),s("p",[s("span",[a._v("也可以使用 ")]),s("span",[a._v("HTTP ")]),s("span",[a._v("响应中的 ")]),s("span",[a._v("Link ")]),s("span",[a._v("首部：")])]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Link: ; rel=prefetch \n")])])]),s("p",[s("span",[a._v("资源预取与 ")]),s("span",[a._v("h2 ")]),s("span",[a._v("引入的服务端推送并没多少关联。服务端推送用于让资源更快到达浏览器，而资源预取相比推送的优点之一是，如果资源已经在缓存里，浏览器就不会浪费时间和带宽重复请求它。所以，请把它看作 ")]),s("span",[a._v("h2 ")]),s("span",[a._v("推送的补充工具，而不是将被替代的特性。")])]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",{staticStyle:{"text-align":"center"}},[s("img",{staticStyle:{"max-width":"600px",width:"806.4px"},attrs:{alt:"image.png",title:"image.png",src:"https://cdn.nlark.com/yuque/0/2019/png/124615/1563443764196-146438fc-e2b5-49a2-aba8-383ac86c4335.png#align=left&display=inline&height=303&name=image.png&originHeight=379&originWidth=1008&size=235321&status=done&width=806.4"}})])])},[],!1,null,null,null);t.default=e.exports}}]);