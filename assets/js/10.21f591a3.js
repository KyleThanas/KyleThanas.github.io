(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{211:function(t,a,i){"use strict";i.r(a);var e=i(2),r=Object(e.a)({},function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h4",{attrs:{id:"快捷通道"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#快捷通道","aria-hidden":"true"}},[t._v("#")]),t._v(" 快捷通道")]),t._v(" "),i("ul",[i("li",[t._v("git add . （将新建的纳入git管理)")])]),i("ul",[i("li",[t._v("git status （查看文件在git仓库中的状态)")])]),i("ul",[i("li",[t._v('git commit -m "提交修改的信息说明"  (完成了首次提交)')])]),i("ul",[i("li",[t._v("git push  (Git会把master分支推送到远程库对应的远程分支上)")])]),i("ul",[i("li",[t._v("git pull  (拉取更新)")])]),t._v(" "),i("h4",{attrs:{id:"要很好的掌握git，先要明白四个名词概念："}},[i("a",{staticClass:"header-anchor",attrs:{href:"#要很好的掌握git，先要明白四个名词概念：","aria-hidden":"true"}},[t._v("#")]),t._v(" 要很好的掌握Git，先要明白四个名词概念：")]),t._v(" "),i("ul",[i("li",[t._v("Workspace（工作区）：新添加的，和修改的未add操作的。")])]),i("ul",[i("li",[t._v("Stage（暂存区）：add操作过后，会进入暂存区。")])]),i("ul",[i("li",[t._v("Repository(本地仓库)：commit操作后，会进入本地仓库。")])]),i("ul",[i("li",[t._v("Remote(远程仓库)：push操作后，会提交到远程仓库。")])]),t._v(" "),i("h4",{attrs:{id:"git的配置："}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git的配置：","aria-hidden":"true"}},[t._v("#")]),t._v(" Git的配置：")]),t._v(" "),i("blockquote",[i("p",[t._v("# 显示当前的Git配置")]),i("p",[t._v("$ git config --list")]),i("p",[t._v("#设置用户名和邮箱，即提交代码时的用户信息")]),i("p",[t._v('$ git config [--global] user.name "[name]"')]),i("p",[t._v('$ git config [--global] user.email "[email address]"')])]),t._v(" "),i("h4",{attrs:{id:"添加-删除文件-到暂存区，即add操作）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#添加-删除文件-到暂存区，即add操作）","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加/删除文件(到暂存区，即add操作）")]),t._v(" "),i("blockquote",[i("p",[t._v("#可以添加一个或多个")]),i("p",[t._v("$ git add  ...")]),i("p",[t._v("#添加所有修改的和新添加的")]),i("p",[t._v("$ git add .")]),i("p",[t._v("#另一种写法")]),i("p",[t._v("$ git add -A")]),i("p",[t._v("#添加指定目录")]),i("p",[t._v("$ git add")]),i("p",[t._v("#由暂存区恢复到工作区（发现提交错了，退回一步）")]),i("p",[t._v("$ git reset HEAD")]),i("p",[t._v("#恢复上一次add提交的所有file")]),i("p",[t._v("$ git reset HEAD")]),i("p",[t._v("#撤销修改操作，恢复到修改之前的，撤销add后位于工作区下进行的")]),i("p",[t._v("$ git checkout --")]),i("p",[t._v("#删除文件,并将文件放入暂存区")]),i("p",[t._v("$ git rm")]),i("p",[t._v("#改文件名，并将修改后的文件放入暂存区")]),i("p",[t._v("$ git mv")])]),t._v(" "),i("h4",{attrs:{id:"提交到本地仓库（commit操作）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#提交到本地仓库（commit操作）","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交到本地仓库（commit操作）")]),t._v(" "),i("blockquote",[i("p",[t._v("#提交暂存区的所有文件(后面的message不可缺少)")]),i("p",[t._v("$ git commit -m")]),i("p",[t._v("#提交暂存区的指定文件")]),i("p",[t._v("$ git commit   -m")])]),t._v(" "),i("h4",{attrs:{id:"分支操作（branch）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分支操作（branch）","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支操作（branch）")]),t._v(" "),i("blockquote",[i("p",[t._v("# 列出所有本地分支")]),i("p",[t._v("$ git branch")]),i("p",[t._v("# 列出所有远程分支")]),i("p",[t._v("$ git branch -r")]),i("p",[t._v("# 列出所有本地分支和远程分支")]),i("p",[t._v("$ git branch -a")]),i("p",[t._v("# 新建一个分支，并切换到该分支")]),i("p",[t._v("$ git checkout -b [branch]")]),i("p",[t._v("# 切换到指定分支，并更新工作区")]),i("p",[t._v("$ git checkout [branch-name]")]),i("p",[t._v("#从远程分支检出指定分支")]),i("p",[t._v("$ git clone -b")]),i("p",[t._v("# 合并指定分支到当前分支（主分支合并自定义分支）")]),i("p",[t._v("$ git merge [branch]")]),i("p",[t._v("# 删除分支")]),i("p",[t._v("$ git branch -d [branch-name]")]),i("p",[t._v("# 删除远程分支")]),i("p",[t._v("$ git push origin --delete [branch-name]")]),i("p",[t._v("$ git branch -dr [remote/branch]")])]),t._v(" "),i("h4",{attrs:{id:"查看信息："}},[i("a",{staticClass:"header-anchor",attrs:{href:"#查看信息：","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看信息：")]),t._v(" "),i("blockquote",[i("p",[t._v("# 显示有变更的文件")]),i("p",[t._v("$ git status")]),i("p",[t._v("# 显示当前分支的版本历史")]),i("p",[t._v("$ git log")])]),t._v(" "),i("h4",{attrs:{id:"gitignore的配置："}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitignore的配置：","aria-hidden":"true"}},[t._v("#")]),t._v(" .gitignore的配置：")]),t._v(" "),i("blockquote",[i("p",[t._v("/build")]),i("p",[t._v("/.idea")]),i("p",[t._v("/.gradle")]),i("p",[t._v("/local.properties")]),i("p",[t._v(".gitignore")])]),t._v(" "),i("h4",{attrs:{id:"用法规则和语义："}},[i("a",{staticClass:"header-anchor",attrs:{href:"#用法规则和语义：","aria-hidden":"true"}},[t._v("#")]),t._v(" 用法规则和语义：")]),t._v(" "),i("blockquote",[i("p",[t._v("# 此为注释 – 将被 Git 忽略")]),i("p",[t._v("*.a       # 忽略所有 .a 结尾的文件")]),i("p",[t._v("!lib.a    # 但 lib.a 除外")]),i("p",[t._v("/TODO     # 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO")]),i("p",[t._v("build/    # 忽略 build/ 目录下的所有文件")]),i("p",[t._v("doc/*.txt # 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt")])]),i("p",[t._v("转载自"),i("a",{attrs:{href:"http://blog.csdn.net/zxyudia/article/details/67633321",target:"_blank"}},[t._v("http://blog.csdn.net/zxyudia/article/details/67633321")])])])},[],!1,null,null,null);a.default=r.exports}}]);