(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{262:function(t,e,a){"use strict";a.r(e);var r=a(28),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"解构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解构"}},[t._v("#")]),t._v(" 解构")]),t._v(" "),a("div",{staticClass:"lake-content-editor-core lake-engine",attrs:{"data-lake-element":"root","data-selection-124615":"%7B%22path%22%3A%5B%5B8%2C0%5D%2C%5B8%2C0%5D%5D%2C%22uuid%22%3A%22124615%22%2C%22active%22%3Atrue%7D"}},[a("h2",{attrs:{id:"数组的解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的解构赋值"}},[t._v("#")]),t._v(" 数组的解构赋值")]),t._v(" "),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),a("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"D0tVm"}},[a("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[a("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[a("div",{staticClass:"language-undefined extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let [a, b, c] = [1, 2, 3]; // a=1 b=2 c=3\n\nlet [foo, [[bar], baz]] = [1, [[2], 3]]; // foo=1 bar=2 baz=3\n\n// 这个很有用的方式\nlet [ , , third] = [\"foo\", \"bar\", \"baz\"]; // third='baz'\nlet [x, , y] = [1, 2, 3]; // x=1 y=3\n\n// 如果解构不成功，变量的值就等于undefined\nlet [x, y, ...z] = ['a']; // x='a' y=undefined z=[]\n\n// 解构时使用默认值.\n// 注意，ES6 内部使用严格相等运算符（===），判断一个位置是否有值。\n// 所以，如果一个数组成员不严格等于undefined，默认值是不会生效的\nlet [x = 1] = [undefined] // x=1\nlet [x = 1] = [null] // x=null \n")])])])])])]),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),t._v(" "),a("h2",{attrs:{id:"对象的解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的解构赋值"}},[t._v("#")]),t._v(" 对象的解构赋值")]),t._v(" "),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),a("p",{staticStyle:{"text-indent":"2em","font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("span",{staticStyle:{color:"#444444"}},[t._v("对象的解构与数组有一个重要的不同。")]),a("strong",[a("span",{staticStyle:{color:"#444444"}},[t._v("数组的元素是按次序排列的，变量的取值由它的位置决定")])]),a("span",{staticStyle:{color:"#444444"}},[t._v("；而")]),a("strong",[a("span",{staticStyle:{color:"#444444"}},[t._v("对象的属性没有次序，变量必须与属性同名，才能取到正确的值")])]),a("span",{staticStyle:{color:"#444444"}},[t._v("。")])]),a("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"1PSgG"}},[a("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[a("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[a("div",{staticClass:"language-undefined extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let { foo, bar } = { foo: \"aaa\", bar: \"bbb\" }; // foo='aaa' bar='bbb'\nlet { bar, foo } = { foo: \"aaa\", bar: \"bbb\" }; // foo='aaa' bar='bbb'\nlet { baz } = { foo: \"aaa\", bar: \"bbb\" }; // baz=undefined\n\n// 如果变量名与属性名不一致，必须写成下面这样\n// 对象的解构赋值的内部机制，是先找到同名属性\n// 然后再赋给对应的变量。真正被赋值的是后者，而不是前者\nlet { foo: baz } = { foo: 'aaa', bar: 'bbb' }; // baz='aaa'\nlet { foo: baz } = { foo: \"aaa\", bar: \"bbb\" }; // baz='aaa' foo会报错error: foo is not defined\n\nlet obj = {\n p: [\n   'Hello',\n   { y: 'World' }\n ]\n};\nlet { p, p: [x, { y }] } = obj; // x='Hello' y='World' p=[\"Hello\", {y: \"World\"}]\n\nlet obj = {};\nlet arr = [];\n({ foo: obj.prop, bar: arr[1] } = { foo: 123, bar: true }) // obj={prop: 123} bar=[empty, true]\n\n// 指定默认值\nlet {x = 3} = {}; // x=3\nlet {x: y = 3} = {}; //y=3\nlet {x: y = 3} = {x: 5}; // y=5\nlet { message: msg = 'Something went wrong' } = {}; // msg=\"Something went wrong\"\nlet {x = 3} = {x: undefined}; // x=3\nlet {x = 3} = {x: null}; // x=null \n")])])])])])]),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),t._v(" "),a("h2",{attrs:{id:"字符串的解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的解构赋值"}},[t._v("#")]),t._v(" 字符串的解构赋值")]),t._v(" "),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("span",{staticStyle:{color:"#444444"}},[t._v("字符串也可以解构赋值。")]),a("span",{staticStyle:{color:"#444444"}},[t._v("这是因为此时，字符串被转换成了一个类似数组的对象。")])]),a("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"oAIhx"}},[a("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[a("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[a("div",{staticClass:"language-undefined extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let [a, b, c, d, e] = 'hello'; // a='h' b='e' c='l' d='l' e='o'\nlet {length : len} = 'hello'; // len=5 \n")])])])])])]),a("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[a("br")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ol",{staticStyle:{"list-style-type":"decimal",margin:"0px","padding-left":"23px","font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word"},attrs:{start:"1","lake-indent":"0"}},[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/langwo/p/7259191.html",target:"_blank"}},[t._v("数组的解构赋值")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);