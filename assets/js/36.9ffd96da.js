(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{304:function(n,e,t){"use strict";t.r(e);var o=t(28),r=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"页面间传值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面间传值"}},[n._v("#")]),n._v(" 页面间传值")]),n._v(" "),t("div",{staticClass:"lake-content-editor-core lake-engine",attrs:{"data-lake-element":"root","data-selection-124615":"%7B%22path%22%3A%5B%5B26%2C0%2C1%2C0%5D%2C%5B26%2C0%2C1%2C2%5D%5D%2C%22uuid%22%3A%22124615%22%2C%22active%22%3Atrue%7D"}},[t("h2",{attrs:{id:"父传子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#父传子"}},[n._v("#")]),n._v(" 父传子")]),n._v(" "),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("strong",[n._v("使用props传值：")]),t("strong",[n._v("子组件通过this.props进行接收就可以了")])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("父组件")]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"NOQJ8"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import { PureComponent, Fragment } from 'react'\nimport DocumentTitle from 'react-document-title'\nimport router from 'umi/router'\nimport styled from 'styled-components'\nimport withStyled from '@@/styles/withStyled'\nimport MineList from '../widgets/MineList' // 子组件\n\nconst MineInfo = withStyled(styled.div`\n position: relative;\n z-index: 10;\n margin: -20px 0 0;\n padding: 20px 20px 0;\n width: 100%;\n   // backgroundColor是withStyled里面的变量\n background-color: ${(props) => props.theme.backgroundColor}; \n border-radius: 20px 20px 0 0;\n`)\n\nconst list = [\n {\n   icon: iconPlay,\n   title: '我的课程',\n   rightIcon: iconRight,\n   onClick: () => router.replace({ pathname: '/lesson' })\n },\n {\n   icon: iconLogo,\n   title: '关于小帮',\n   rightIcon: iconRight,\n   onClick: () => router.push({ pathname: '/document/about' })\n }\n]\n\nclass MinePage extends PureComponent {\n constructor(props) {\n   super(props)\n }\n\n render() {\n   const { account: { account = {} } } = this.props\n   return (\n     <documenttitle title=\"我的\">\n       <fragment>\n         <mineinfo>\n           {list.map((item, index) => (\n             // {...item} 向子组件传递参数\n             // {...item} 向子组件传递参数\n             // {...item} 向子组件传递参数\n             <minelist {...item} key=\"{index}\"> // 子组件 \n           ))}\n         </minelist></mineinfo>\n       </fragment>\n     </documenttitle>\n   )\n }\n}\nexport default MinePage \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("子"),t("span",[n._v("组件")])]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"tBX6O"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport withStyled from '@@/styles/withStyled'\n\nconst Container = withStyled(styled.div`\n width: 100%;\n height: 76px;\n display: flex;\n align-items: center;\n img:nth-of-type(1) {\n   width: 28px;\n   height: 28px;\n   margin: 0 16px 0 0;\n }\n span {\n   flex: 1;\n }\n img:nth-of-type(2) {\n   width: 20px;\n   height: 20px;\n }\n`)\n\nconst MineList = ({ title, icon, rightIcon, onClick }) => {\n return (\n   <container onclick=\"{onClick}\">\n     <img src=\"{icon}\">\n     <span>{title}</span>\n     <img src=\"{rightIcon}\">\n   </container>\n )\n}\n\nMineList.propTypes = {\n title: PropTypes.string.isRequired,\n icon: PropTypes.string.isRequired,\n rightIcon: PropTypes.string.isRequired,\n onClick: PropTypes.func\n}\n\nexport default MineList \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),n._v(" "),t("h2",{attrs:{id:"子传父-不带参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子传父-不带参数"}},[n._v("#")]),n._v(" 子传父--不带参数")]),n._v(" "),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("strong",[n._v("子组件向父组件传值需要绑定一个事件，然后事件是父组件传递过来的this.props.event来进行值的更替")])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("strong",[t("br")])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("父"),t("span",[n._v("组件")])]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"0yI77"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import { PureComponent } from 'react'\nimport router from 'umi/router'\nimport PropTypes from 'prop-types'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport withStyled from '@@/styles/withStyled'\nimport GlobalModalRich from '@@/components/Modal/Rich'\nimport FeedBack from '../FeedBack' // 子组件\n\nconst NavbarPaddingSafe = createGlobalStyle`\n #app {\n   padding-bottom: 49px;\n }\n`\n\nconst NavbarContainer = withStyled(styled.div`\n position: fixed;\n left: 0;\n right: 0;\n bottom: 0;\n margin: 0 auto;\n width: 100%;\n height: auto;\n max-width: ${(props) => props.theme.maxWidth};\n box-shadow: 0 -6px 12px 0 rgba(0, 0, 0, 0.04);\n background-color: #ffffff;\n`)\n\nconst NavbarGroup = withStyled(styled.div`\n display: flex;\n align-items: center;\n padding: 7px 0 6px;\n`)\n\nconst NavbarButton = withStyled(styled.div`\n flex: 25;\n padding: 22px 0 0;\n font-size: 10px;\n line-height: 14px;\n color: ${(props) => props.theme.font400};\n text-align: center;\n background-size: 20px 20px;\n background-repeat: no-repeat;\n background-position: top center;\n background-image: url(${(props) => props.image});\n`)\n\nclass ResourceNavbarButton extends PureComponent {\n constructor(props) {\n   super(props)\n   // uniqueId、feedbackStatus是父组件传递进来的值\n   const { uniqueId, feedbackStatus } = this.props\n   this.uniqueId = uniqueId\n   this.state = {\n     feedbackStatus: feedbackStatus\n   }\n }\n\n componentWillUnmount() {\n   GlobalModalRich.hide()\n }\n\n action = {\n   handleShowFeedback: () => {\n     const feedback = {\n       title: '评价本节',\n       // 调用子组件\n       // handleConfirm接收子组件的事件或参数\n       // handleConfirm接收子组件的事件或参数\n       // handleConfirm接收子组件的事件或参数\n       children: <feedback uniqueid=\"{this.uniqueId}\" handleconfirm=\"{()\" => { this.action.handleFeedback() }} />,\n       onClick: GlobalModalRich.hide\n     }\n     GlobalModalRich.show(feedback)\n   },\n   // 接收到子组件到事件或状态后，触发到事件\n   // 接收到子组件到事件或状态后，触发到事件\n   // 接收到子组件到事件或状态后，触发到事件\n   handleFeedback: () => {\n     this.setState({ feedbackStatus: true })\n     this.props.handleConfirm()\n   }\n }\n\n render() {\n   const { feedbackStatus } = this.state\n   const { noteListStatus } = this.props\n   return (\n     <navbarcontainer classname=\"ios-padding-safe\">\n       <navbarpaddingsafe>\n       <navbargroup>\n         <navbarbutton image=\"{iconFeedback}\" onclick=\"{()\" => this.action.handleShowFeedback()}>\n           <span>评价本节</span>\n         </navbarbutton>\n       </navbargroup>\n     </navbarpaddingsafe></navbarcontainer>\n   )\n }\n}\n\nResourceNavbarButton.propTypes = {\n uniqueId: PropTypes.string.isRequired,\n feedbackStatus: PropTypes.bool.isRequired,\n noteListStatus: PropTypes.bool.isRequired\n}\n\nexport default ResourceNavbarButton \n")])])]),t("p")])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("子"),t("span",[n._v("组件")])]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"WjLn5"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("p"),n._v(" "),t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport classnames from 'classnames'\nimport withStyled from '@@/styles/withStyled'\nimport resourceService from '@@/services/resource'\nimport GlobalModalRich from '@@/components/Modal/Rich'\n\nimport iconBad from './icon-bad.png'\nimport iconBadChecked from './icon-bad-checked.png'\nimport iconGood from './icon-good.png'\nimport iconGoodChecked from './icon-good-checked.png'\nimport iconSimple from './icon-simple.png'\nimport iconSimpleChecked from './icon-simple-checked.png'\n\nconst Container = withStyled(styled.div`\n display: flex;\n align-items: center;\n justify-content: center;\n`)\n\nconst Item = withStyled(styled.div`\n flex: 1;\n font-size: 14PX;\n display: flex;\n flex-direction: column;\n align-items: center;\n color: ${(props) => props.theme.font100};\n padding: 28px 0 0;\n background-size: 24px 24px;\n background-repeat: no-repeat;\n background-position: top center;\n span {\n   font-size: 10PX;\n   color: ${(props) => props.theme.font400};\n }\n &.focus {\n   span {\n     color: #FFC300;\n   }\n }\n &.bad {\n   background-image: url(${iconBad});\n   &.focus {\n     background-image: url(${iconBadChecked});\n   }\n }\n &.good {\n   background-image: url(${iconGood});\n   &.focus {\n     background-image: url(${iconGoodChecked});\n   }\n }\n &.simple {\n   background-image: url(${iconSimple});\n   &.focus {\n     background-image: url(${iconSimpleChecked});\n   }\n }\n`)\n\nclass FeedBack extends PureComponent {\n constructor(props) {\n   super(props)\n   this.state = {\n     checkedValue: ''\n   }\n }\n\n action = {\n   handleFetch: async (type, name) => {\n     const { checkedValue } = this.state\n     if (checkedValue) {\n       return false\n     }\n\n     const { uniqueId } = this.props\n     this.setState({\n       checkedValue: name\n     })\n\n     try {\n       await resourceService.feedback(uniqueId, { feedBackType: type })\n     } catch (error) {\n       console.warn(error.message)\n     } finally {\n       setTimeout(GlobalModalRich.hide, 500)\n       // 向父组件发送事件，也可以传递参数\n       // 向父组件发送事件，也可以传递参数\n       // 向父组件发送事件，也可以传递参数\n       this.props.handleConfirm()\n     }\n   }\n }\n\n render() {\n   const { checkedValue } = this.state\n   const badClassName = classnames('bad', { focus: checkedValue === 'bad' })\n   const goodClassName = classnames('good', { focus: checkedValue === 'good' })\n   const simpleClassName = classnames('simple', { focus: checkedValue === 'simple' })\n   return (\n     <container>\n       <item classname=\"{badClassName}\" onclick=\"{()\" => this.action.handleFetch(1, 'bad')}>\n         <span>没听懂</span>\n       </item>\n       <item classname=\"{goodClassName}\" onclick=\"{()\" => this.action.handleFetch(2, 'good')}>\n         <span>有收获</span>\n       </item>\n       <item classname=\"{simpleClassName}\" onclick=\"{()\" => this.action.handleFetch(0, 'simple')}>\n         <span>太简单</span>\n       </item>\n     </container>\n   )\n }\n}\n\nFeedBack.propTypes = {\n uniqueId: PropTypes.string.isRequired\n}\n\nexport default FeedBack \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),n._v(" "),t("h2",{attrs:{id:"子传父-带参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子传父-带参数"}},[n._v("#")]),n._v(" 子传父--带参数")]),n._v(" "),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("父"),t("span",[n._v("组件")])]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"YN8NJ"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import { PureComponent, Fragment } from 'react'\nimport DocumentTitle from 'react-document-title'\nimport ExerciseCard from '../widgets/ExerciseCard'\n\nclass DetailPage extends PureComponent {\n   constructor(props) {\n   super(props)\n }\n \n action = {\n   handleChangeDate: (exerciseId, type, value) => {\n     console.log(exerciseId, type, value)// 获取子组件传递过来的值\n   },\n }\n \n render(){\n   return (\n     <documenttitle title=\"{title}\">\n       <fragment>\n         {exerciseList.map(item => (\n           <exercisecard {...item} isfinished=\"{isFinished}\" handlechangedate=\"{(exerciseId,\" type, value)> this.action.handleChangeDate(exerciseId, type, value)}\n             key={item.rowKey}\n             />\n         ))}\n       </exercisecard></fragment>\n     </documenttitle>\n   )\n }\n} \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("子组件")]),t("div",{staticClass:"lake-activated",attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"Zo1XN"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport withStyled from '@@/styles/withStyled'\nimport classnames from 'classnames'\n\nimport iconRadio from './icon-radio.png'\nimport iconRadioCorrect from './icon-radio-correct.png'\nimport iconCheckout from './icon-checkout.png'\nimport iconCheckoutCorrect from './icon-checkout-correct.png'\nimport iconCorrect from './icon-correct.png'\nimport iconWrong from './icon-wrong.png'\n\nconst Container = withStyled(styled.div`\n position: relative;\n padding: 16px 0 8px;\n width: 100%;\n`)\n\nconst Result = withStyled(styled.img`\n position: absolute;\n top: 0;\n right: 0;\n width: 72px;\n height: 72px;\n`)\n\nconst Order = withStyled(styled.div`\n height: 20px;\n font-size: 16px;\n font-weight: bold;\n color: ${props => props.theme.font100};\n line-height: 20px;\n`)\n\nconst Title = withStyled(styled.div`\n margin: 8px 0 4px;\n font-size: 16px;\n text-align: justify;\n text-align-last: left;\n line-height: 24px;\n color: ${props => props.theme.font100};\n`)\n\nconst Answer = withStyled(styled.div`\n position: relative;\n display: flex;\n align-items: center;\n margin: 0 0 8px;\n padding: 0 0 0 40px;\n height: 41px;\n background-color: #f5f7fa;\n border-radius: 8px;\n &:before {\n   position: absolute;\n   left: 12px;\n   top: 50%;\n   transform: translateY(-50%);\n   display: inline-block;\n   content: '';\n   width: 20px;\n   height: 20px;\n   background: url(${props => props.icon});\n   background-repeat: no-repeat;\n   background-size: cover;\n }\n &:last-of-type {\n   margin: 0 0 24px;\n }\n &.selected {\n   background-color: rgba(255, 221, 0, 0.1);\n }\n`)\n\nconst Analysis = withStyled(styled.div`\n margin: 0 0 40px;\n padding: 16px 12px;\n background-color: #e5e9f2;\n border-radius: 8px;\n border: 1px solid rgba(229, 233, 242, 1);\n`)\n\nconst CorrectAnswer = withStyled(styled.div`\n font-size: 14px;\n line-height: 18px;\n color: ${props => props.theme.font100};\n`)\n\nconst AnswerAnalysis = withStyled(styled.div`\n margin: 4px 0 0;\n font-size: 14px;\n line-height: 22px;\n color: ${props => props.theme.font100};\n`)\n\nconst judgeResult = status => {\n switch (+status) {\n   case 0:\n     return ''\n   case 1:\n     return iconCorrect\n   case 2:\n     return iconWrong\n   default:\n     return ''\n }\n}\n\nconst judgeType = type => {\n if (type === 0) {\n   const typeDescription = '单选题'\n   const iconType = iconRadio\n   const iconSelect = iconRadioCorrect\n   return { typeDescription, iconType, iconSelect }\n } else if (type === 1) {\n   const typeDescription = '多选题'\n   const iconType = iconCheckout\n   const iconSelect = iconCheckoutCorrect\n   return { typeDescription, iconType, iconSelect }\n }\n}\n\nconst judgeLabel = index => {\n return String.fromCharCode(65 + index)\n}\n\nconst ExerciseCard = ({ isFinished, exerciseId, title, type, status, content, options, analysis, handleChangeDate }) => {\n const iconResult = judgeResult(status)\n const { typeDescription, iconType, iconSelect } = judgeType(type)\n let rightResult = ''\n\n return (\n   <container>\n     {iconResult && <result src=\"{iconResult}\">}\n     <order>\n       {title}【{typeDescription}】\n     </order>\n     <title>{content}</title>\n     <div>\n       {options.map((item, index) => {\n         const { content, isUserAnswer, isCorrect } = item\n         const label = judgeLabel(index)\n         if (isCorrect) {\n           rightResult += label\n         }\n         const changeResult = isFinished ? () => { } : () => handleChangeDate(exerciseId, type, index)\n         const icon = isUserAnswer ? iconSelect : iconType\n         return (\n           <answer classname=\"{classnames({\" selected: isuseranswer })} icon=\"{icon}\" onclick=\"{changeResult}\" key=\"{index}\">\n             {label}.{content}\n           </answer>\n         )\n       })}\n     </div>\n     {isFinished && (\n       <analysis>\n         <correctanswer>正确答案：{rightResult}</correctanswer>\n         <answeranalysis>解析：{analysis}</answeranalysis>\n       </analysis>\n     )}\n   </result></container>\n )\n}\n\nExerciseCard.propTypes = {\n isFinished: PropTypes.bool,\n exerciseId: PropTypes.number,\n title: PropTypes.string,\n type: PropTypes.number,\n status: PropTypes.number,\n content: PropTypes.string,\n options: PropTypes.array,\n analysis: PropTypes.string,\n handleChangeDate: PropTypes.func,\n}\n\nexport default ExerciseCard \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),n._v(" "),t("h2",{attrs:{id:"中间件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[n._v("#")]),n._v(" 中间件")]),n._v(" "),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("withStyled.js--基础颜色组件")]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"AhqtE"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import { forwardRef } from 'react'\nimport { ThemeProvider, keyframes } from 'styled-components'\n\nexport const theme = {\n // 基础颜色\n primaryColor: 'rgba(255, 221, 0, 1)',\n secondaryColor: 'rgba(255, 196, 1, 1)',\n linkColor: 'rgba(24, 170, 242, 1)',\n borderColor: 'rgba(229, 233, 242, 1)',\n backgroundColor: 'rgba(245, 247, 250, 1)',\n maskColor: 'rgba(0, 0, 0, 0.5)',\n shadowColor: 'rgba(200, 200, 200, 0.05)',\n highLightColor: 'rgba(34, 34, 34, 1);',\n // 基金相关\n increaseColor: '#FC4447',\n decreaseColor: '#3CC86B',\n // 层级\n maskZindex: 100,\n popupZindex: 200,\n dialogZindex: 300,\n // 字体颜色\n font100: '#324057',\n font200: '#475669',\n font300: '#5E6D82',\n font400: '#8492A6',\n font500: '#99A9BF',\n font600: '#C0CCDA',\n importantfont: '#FF8026',\n // 宽度\n maxWidth: '480PX',\n // 加载器\n loaderPrimaryColor: 'rgba(239, 242, 247, 1)',\n loaderSecondaryColor: 'rgba(239, 242, 247, 0.6)'\n}\n\nexport const autofill = keyframes`\n from {\n   background - color: transparent;\n }\n to {\n   background - color: transparent;\n }\n`\n\nexport const popupCenter = keyframes`\n 0% {\n   transform: translateY(-50%) scale(0.8);\n }\n 100% {\n   transform: translateY(-50%) scale(1);\n }\n`\n\nexport const riseNavbar = keyframes`\n 0% {\n   bottom: -64px;\n }\n 100% {\n   bottom: 0;\n }\n`\n\nconst withStyled = (Component) => {\n const StyledComponent = (props, ref) => (\n   <themeprovider theme=\"{theme}\">\n     <component ref=\"{ref}\" {...props}>\n   </component></themeprovider>\n )\n\n return forwardRef(StyledComponent)\n}\n\nexport default withStyled \n")])])])])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[n._v("GlobalModalRich.js--模态框组件")]),t("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"WOZls"}},[t("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(38, 38, 38)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[t("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[t("div",{staticClass:"language-undefined extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport withStyled from '@@/styles/withStyled'\nimport { MountPoint } from '@@/utils/dom'\nimport iconClose from '@@/assets/icons/icon-close.png'\n\nconst MaskBasic = withStyled(styled.div`\n position: fixed;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n background-color: ${(props) => props.theme.maskColor};\n z-index: ${(props) => props.theme.maskZindex};\n`)\n\nconst MaskCenter = withStyled(styled.div`\n position: absolute;\n left: 0;\n right: 0;\n top: 45%;\n transform: translateY(-50%);\n padding: 20px;\n text-align: center;\n z-index: ${(props) => props.theme.dialogZindex};\n animation: ${popupCenter} 200ms linear forwards;\n`)\n\nconst ModalContainer = withStyled(styled.div`\n display: inline-block;\n margin: 0 auto;\n padding: 25px 20px;\n max-width: 360px;\n min-width: 240px;\n width: 86%;\n text-align: center;\n border-radius: 10px;\n background-color: #ffffff;\n`)\n\nconst ModalTitle = withStyled(styled.h4`\n font-size: 20px;\n font-weight: bold;\n line-height: 1.5;\n color: ${(props) => props.theme.font100};\n text-align: center;\n`)\n\nconst ModalContent = withStyled(styled.div`\n padding: 30px 0 25px;\n`)\n\nconst ModalClose = styled.div`\n margin: 40px auto 0;\n width: 26px;\n height: 26px;\n background-size: 100% 100%;\n background-repeat: no-repeat;\n background-image: url(${iconClose});\n`\n\nconst ModalComponent = ({ title, children, onClick }) => (\n <maskbasic onclick=\"{onClick}\">\n   <maskcenter>\n     <modalcontainer onclick=\"{(e)\" => e.stopPropagation()}>\n       <modaltitle>{title}</modaltitle>\n       <modalcontent>{children}</modalcontent>\n     </modalcontainer>\n     <modalclose>\n   </modalclose></maskcenter>\n </maskbasic>\n)\n\nModalComponent.defaultProps = {\n title: '提示',\n children: '请输入提示内容',\n onClick: () => { }\n}\n\nModalComponent.propTypes = {\n title: PropTypes.string.isRequired,\n children: PropTypes.node.isRequired,\n onClick: PropTypes.func.isRequired\n}\n\nclass GlobalModalRich extends MountPoint {\n hide = () => {\n   this.removeMountPoint()\n }\n\n show = (options) => {\n   this.render(<modalcomponent onclick=\"{this.hide}\" {...options}>)\n }\n}\n\nexport default new GlobalModalRich() \n")])])]),t("p")])])]),t("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"24px","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"}},[t("br")])]),t("p")])}),[],!1,null,null,null);e.default=r.exports}}]);