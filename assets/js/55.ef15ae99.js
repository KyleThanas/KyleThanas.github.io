(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{246:function(e,t,n){"use strict";n.r(t);var a=n(28),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"zshrc-修改"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zshrc-修改"}},[e._v("#")]),e._v(" .zshrc 修改")]),e._v(" "),n("div",{staticClass:"lake-content-editor-core lake-engine lake-typography-traditional",attrs:{"data-lake-element":"root"}},[n("h2",{attrs:{id:"修改zshrc文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改zshrc文件"}},[e._v("#")]),e._v(" 修改zshrc文件")]),e._v(" "),n("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"1EenV"}},[n("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[n("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[n("div",{staticClass:"language-undefined extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ vim ~/.zshrc   //编辑 .zshrc 文件\n$ source ~/.zshrc  //重新加载 .zshrc 文件\n$ cat  ~/.zshrc  //查看 .zshrc 文件 \n")])])])])])]),n("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"0506af87e8993d681ad3e9edb1048ee6"}},[n("br")]),e._v(" "),n("h2",{attrs:{id:"zshrc配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zshrc配置"}},[e._v("#")]),e._v(" zshrc配置")]),e._v(" "),n("div",{staticClass:"lake-card-embed-toolbar-active lake-activated",attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"vi74H"}},[n("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[n("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[n("div",{staticClass:"language-undefined extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("# If you come from bash you might have to change your $PATH.\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\n\n# Path to your oh-my-zsh installation.\nexport ZSH=\"/Users/zhangxiaozheng/.oh-my-zsh\"\n\n# Set name of the theme to load --- if set to \"random\", it will\n# load a random theme each time oh-my-zsh is loaded, in which case,\n# to know which specific one was loaded, run: echo $RANDOM_THEME\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\nZSH_THEME=\"robbyrussell\"\n\n# Set list of themes to pick from when loading at random\n# Setting this variable when ZSH_THEME=random will cause zsh to load\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\n# If set to an empty array, this variable will have no effect.\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\n\n# Uncomment the following line to use case-sensitive completion.\n# CASE_SENSITIVE=\"true\"\n\n# Uncomment the following line to use hyphen-insensitive completion.\n# Case-sensitive completion must be off. _ and - will be interchangeable.\n# HYPHEN_INSENSITIVE=\"true\"\n\n# Uncomment the following line to disable bi-weekly auto-update checks.\n# DISABLE_AUTO_UPDATE=\"true\"\n\n# Uncomment the following line to automatically update without prompting.\n# DISABLE_UPDATE_PROMPT=\"true\"\n\n# Uncomment the following line to change how often to auto-update (in days).\n# export UPDATE_ZSH_DAYS=13\n\n# Uncomment the following line if pasting URLs and other text is messed up.\n# DISABLE_MAGIC_FUNCTIONS=true\n\n# Uncomment the following line to disable colors in ls.\n# DISABLE_LS_COLORS=\"true\"\n\n# Uncomment the following line to disable auto-setting terminal title.\n# DISABLE_AUTO_TITLE=\"true\"\n\n# Uncomment the following line to enable command auto-correction.\n# ENABLE_CORRECTION=\"true\"\n\n# Uncomment the following line to display red dots whilst waiting for completion.\n# COMPLETION_WAITING_DOTS=\"true\"\n\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n\n# Uncomment the following line if you want to change the command execution time\n# stamp shown in the history command output.\n# You can set one of the optional three formats:\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\n# or set a custom format using the strftime function format specifications,\n# see 'man strftime' for details.\n# HIST_STAMPS=\"mm/dd/yyyy\"\n\n# Would you like to use another custom folder than $ZSH/custom?\n# ZSH_CUSTOM=/path/to/new-custom-folder\n\n# Which plugins would you like to load?\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git)\n\nsource $ZSH/oh-my-zsh.sh\n\n# User configuration\n\n# export MANPATH=\"/usr/local/man:$MANPATH\"\n\n# You may need to manually set your language environment\n# export LANG=en_US.UTF-8\n\n# Preferred editor for local and remote sessions\n# if [[ -n $SSH_CONNECTION ]]; then\n#   export EDITOR='vim'\n# else\n#   export EDITOR='mvim'\n# fi\n\n# Compilation flags\n# export ARCHFLAGS=\"-arch x86_64\"\n\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\n# For a full list of active aliases, run `alias`.\n#\n# Example aliases\n# alias zshconfig=\"mate ~/.zshrc\"\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\n\nalias history=\"fc -il 1\"\nalias code=\"/Applications/Visual\\ Studio\\ Code.app/Contents/Resources/app/bin/code\"\nexport PATH=\"/usr/local/opt/mysql@5.7/bin:$PATH\"\n\nalias gf='git fetch'\n\nalias gpu='git pull'\nalias gpuo='git pull origin'\nalias gpuom='git pull origin master'\nalias gpuu='git pull upstream'\nalias gpuum='git pull upstream master'\n\nalias gps='git push'\nalias gpso='git push origin'\nalias gpsom='git push origin master'\nalias gpsu='git push upstream'\nalias gpsum='git push upstream master'\n\nalias gco='git checkout'\nalias gb='git branch'\nalias gt='git tag'\nalias gl='git log'\nalias gs='git status'\nalias ga='git add'\nalias gci='git commit -m'\nalias gm='git merge'\nalias gd='git diff'\nalias grb='git rebase -i'\n\nalias gqa='git fetch upstream; git reset --hard upstream/qa'\nalias gpro='git fetch upstream; git reset --hard upstream/production'\n\n# 这样 push qa 分支之后会自动创建 mr 然后自动合并\nalias push-qa=\"git push origin -o merge_request.create -o merge_request.merge_when_pipeline_succeeds -o merge_request.target=qa\" \n")])])])])])]),n("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"a4ec4e7ea5c4386fdf9b724d03433713"}},[n("br")])])])}),[],!1,null,null,null);t.default=o.exports}}]);