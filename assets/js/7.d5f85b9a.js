(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{428:function(t,a,r){"use strict";r.r(a);var s=r(56),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"git-branch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),r("p",[r("a",{attrs:{name:"v1JAx"}})]),t._v(" "),r("h2",{attrs:{id:"开始"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--color"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("when"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-color"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--show-current"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-v "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--abbrev"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("length"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-abbrev"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--column"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("options"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-column"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--sort"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("key"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--merged "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-merged"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--contains "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--no-contains "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--points-at "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("object"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--format"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("format"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-r "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --remotes"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --all"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--list"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pattern"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("…​"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--track "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-track"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-f"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("start-point"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--set-upstream-to"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("upstream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -u "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("upstream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --unset-upstream "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-m "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -M"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oldbranch"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newbranch"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-c "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -C"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oldbranch"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newbranch"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-d "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -D"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-r"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("…​\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --edit-description "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),r("p",[r("a",{attrs:{name:"KFtZ0"}})]),t._v(" "),r("h4",{attrs:{id:"git更新远程分支列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git更新远程分支列表"}},[t._v("#")]),t._v(" git更新远程分支列表")]),t._v(" "),r("p",[t._v("git -prune // 从对象数据库中删除所有不可访问的对象"),r("br"),t._v("git remote update --prune // git 清理无效的远程追踪分支"),r("br")]),t._v(" "),r("p",[r("a",{attrs:{name:"YijDu"}})]),t._v(" "),r("h4",{attrs:{id:"git分支常用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git分支常用"}},[t._v("#")]),t._v(" git分支常用")]),t._v(" "),r("p",[t._v("git branch"),r("br"),t._v("git branch -a"),r("br"),t._v("git branch -D 分支名"),r("br"),t._v(" "),r("br"),t._v("upstream分支操作")]),t._v(" "),r("ol",[r("li",[t._v("确保工作树是干净的，可以使用git status 查看；")]),t._v(" "),r("li",[t._v("创建并切换到新的上游分支的本地版本 git checkout -b new upstream/new；")]),t._v(" "),r("li",[t._v("将新的分支推送到个人远程仓库 git push -u origin new,-u跟踪指定的远程")])]),t._v(" "),r("p",[r("a",{attrs:{name:"h1nHS"}})]),t._v(" "),r("h4",{attrs:{id:"git修改分支名-实现无缝衔接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git修改分支名-实现无缝衔接"}},[t._v("#")]),t._v(" git修改分支名，实现无缝衔接")]),t._v(" "),r("p",[t._v("例如，我们的想新建的分支名为 feature/story-13711，却写成了 feature/stor-13711"),r("br"),t._v(" "),r("br"),t._v("语法：git branch -m "),r("oldbranch",[r("newbranch",[r("br"),t._v("命令：git branch -m feature/stor-13711 feature/story-13711"),r("br"),r("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/124615/1591670377187-e8d2deff-780b-4037-9ac1-f3fa0fd3dbfa.png#align=left&display=inline&height=279&margin=%5Bobject%20Object%5D&name=image.png&originHeight=557&originWidth=1280&size=562684&status=done&style=none&width=640",alt:"image.png"}}),r("br"),t._v("执行完之后发现文件的工作区已修改内容一点都没有变化，真正的实现了无痛过渡，皆大欢喜！"),r("br")])],1)],1),t._v(" "),r("p",[r("a",{attrs:{name:"9tRnv"}})]),t._v(" "),r("h4",{attrs:{id:"选项"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),r("p",[t._v("-d --delete"),r("br"),t._v("删除分支。该分支必须完全合并到其上游分支中，或者"),r("code",[t._v("HEAD")]),t._v("如果没有上游设置为"),r("code",[t._v("--track")]),t._v("或"),r("code",[t._v("--set-upstream")]),t._v("。"),r("br"),t._v("-D"),r("br"),t._v("快捷键"),r("code",[t._v("--delete --force")]),t._v("。"),r("br"),t._v("-l --create-reflog"),r("br"),t._v("创建分支的reflog。这将激活对分支ref的所有更改的记录，从而可以使用基于日期的sha1表达式，如“"),r("branchname",[t._v(" @ {yesterday}”。请注意，在非裸仓库中，configlog "),r("code",[t._v("core.logAllRefUpdates")]),t._v("选项通常默认启用reflog 。否定形式"),r("code",[t._v("--no-create-reflog")]),t._v("只会覆盖较早的形式"),r("code",[t._v("--create-reflog")]),t._v("，但目前并不否定这种设置"),r("code",[t._v("core.logAllRefUpdates")]),t._v("。"),r("br"),t._v("-f --force"),r("br"),t._v("如果"),r("branchname",[t._v("已存在，请将"),r("branchname",[t._v("重置为"),r("startpoint",[t._v("。没有"),r("code",[t._v("-f")]),t._v(" "),r("code",[t._v("git branch")]),t._v("拒绝改变现有的分支。结合"),r("code",[t._v("-d")]),t._v("（或"),r("code",[t._v("--delete")]),t._v("），允许删除分支，而不考虑其合并状态。结合"),r("code",[t._v("-m")]),t._v("（或"),r("code",[t._v("--move")]),t._v("），即使新分支名称已存在，也允许重命名分支。"),r("br"),t._v("-m --move"),r("br"),t._v("移动/重命名分支和相应的reflog。"),r("br"),t._v("-M"),r("br"),t._v("快捷键"),r("code",[t._v("--move --force")]),t._v("。"),r("br"),t._v("--color="),r("when",[r("br"),t._v("颜色分支突出显示当前，本地和远程跟踪分支。该值必须始终（默认），永不，或自动。"),r("br"),t._v("--no-color"),r("br"),t._v("关闭分支颜色，即使配置文件将默认设置为颜色输出。和...一样"),r("code",[t._v("--color=never")]),t._v("。"),r("br"),t._v("-i --ignore-case"),r("br"),t._v("排序和过滤分支不区分大小写。"),r("br"),t._v("--column="),r("options",[t._v(" --no-column"),r("br"),t._v("在列中显示分支列表。有关选项语法，请参阅配置变量column.branch。"),r("code",[t._v("--column")]),t._v("与"),r("code",[t._v("--no-column")]),t._v("不带选项相当于"),r("code",[t._v("always")]),t._v("和"),r("code",[t._v("never")]),t._v("分别。"),r("br"),t._v("该选项仅适用于非详细模式。"),r("br"),t._v("-r --remotes"),r("br"),t._v("列出或删除（如果与-d一起使用）远程跟踪分支。"),r("br"),t._v("-a --all"),r("br"),t._v("列出远程追踪分行和当地分行。"),r("br"),t._v("--list"),r("br"),t._v("列出分支。使用可选项"),r("code",[t._v("<pattern>...")]),t._v("，例如"),r("code",[t._v("git branch --list 'maint-*'")]),t._v("，仅列出与模式匹配的分支。"),r("br"),t._v("这不应与此混淆"),r("code",[t._v("git branch -l <branchname>")]),t._v("，它会创建一个以"),r("code",[t._v("<branchname>")]),t._v("reflog 命名的分支。详情见"),r("code",[t._v("--create-reflog")]),t._v("上文。"),r("br"),t._v("-v -vv --verbose"),r("br"),t._v("在列表模式下，显示sha1并为每个头提交主题行，以及与上游分支（如果有）的关系。如果给出两次，也打印上游分支的名称（另请参阅"),r("code",[t._v("git remote show <remote>")]),t._v("）。"),r("br"),t._v("-q --quiet"),r("br"),t._v("创建或删除分支时更安静，抑制非错误消息。"),r("br"),t._v("--abbrev="),r("length",[r("br"),t._v("改变输出列表中sha1的最小显示长度。默认值是7，可以由"),r("code",[t._v("core.abbrev")]),t._v("config选项覆盖。"),r("br"),t._v("--no-abbrev"),r("br"),t._v("在输出列表中显示完整的sha1，而不是缩写它们。"),r("br"),t._v("-t --track"),r("br"),t._v("创建新分支时，设置"),r("code",[t._v("branch.<name>.remote")]),t._v("和"),r("code",[t._v("branch.<name>.merge")]),t._v("配置条目以将起点分支标记为新分支的“上游”。这个配置会告诉git显示in "),r("code",[t._v("git status")]),t._v("和in两个分支之间的关系"),r("code",[t._v("git branch -v")]),t._v("。此外，它在"),r("code",[t._v("git pull")]),t._v("没有参数的情况下指示新分支签出时从上游撤出。"),r("br"),t._v("当起始点是远程跟踪分支时，此行为是默认行为。"),r("code",[t._v("false")]),t._v("如果需要"),r("code",[t._v("git checkout")]),t._v("，"),r("code",[t._v("git branch")]),t._v("可以将branch.autoSetupMerge配置变量设置为并且始终表现得像"),r("code",[t._v("--no-track")]),t._v("给定的一样。"),r("code",[t._v("always")]),t._v("如果您想在起点为本地或远程跟踪分支时想要此行为，请将其设置为。"),r("br"),t._v("--no-track"),r("br"),t._v("即使branch.autoSetupMerge配置变量为true，也不要设置“上游”配置。"),r("br"),t._v("--set-upstream"),r("br"),t._v("如果指定的分支尚不存在或者"),r("code",[t._v("--force")]),t._v("已经给出，则完全相同"),r("code",[t._v("--track")]),t._v("。否则，"),r("code",[t._v("--track")]),t._v("在创建分支时设置配置，除非分支指向的地方不更改。"),r("br"),t._v("-u "),r("upstream",[t._v(" --set-upstream-to="),r("upstream",[r("br"),t._v("设置"),r("branchname",[t._v("的跟踪信息，以便"),r("upstream",[t._v("被视为"),r("branchname",[t._v("的上游分支。如果未指定"),r("branchname",[t._v("，则默认为当前分支。"),r("br"),t._v("--unset-upstream"),r("br"),t._v("删除"),r("branchname",[t._v("的上游信息。如果未指定分支，则默认为当前分支。"),r("br"),t._v("--edit-description"),r("br"),t._v("打开一个编辑器，编辑文本解释分支是干什么用的，通过其他各种命令使用（例如"),r("code",[t._v("format-patch")]),t._v("，"),r("code",[t._v("request-pull")]),t._v("和"),r("code",[t._v("merge")]),t._v("（如果启用））。可以使用多行解释。"),r("br"),t._v("--contains "),r("commit",[r("br"),t._v("只列出包含指定提交的分支（如果未指定，则为HEAD）。意味着"),r("code",[t._v("--list")]),t._v("。"),r("br"),t._v("--no-contains "),r("commit",[r("br"),t._v("只列出不包含指定提交的分支（如果未指定，则为HEAD）。意味着"),r("code",[t._v("--list")]),t._v("。"),r("br"),t._v("--merged "),r("commit",[r("br"),t._v("仅列出可从指定提交中获得提示的分支（如果未指定，则为HEAD）。暗示"),r("code",[t._v("--list")]),t._v("，不符合"),r("code",[t._v("--no-merged")]),t._v("。"),r("br"),t._v("--no-merged "),r("commit",[r("br"),t._v("仅列出提示无法从指定提交中获得的分支（如果未指定，则为HEAD）。暗示"),r("code",[t._v("--list")]),t._v("，不符合"),r("code",[t._v("--merged")]),t._v("。"),r("br"),r("branchname",[r("br"),t._v("要创建或删除的分支的名称。新的分支名称必须通过由git-check-ref-format [1]定义的所有检查。其中一些检查可能会限制分支名称中允许的字符。"),r("br"),r("start-point",[r("br"),t._v("新的分支头将指向这个提交。它可以作为分支名称，提交标识或标签给出。如果省略此选项，则将使用当前的HEAD。"),r("br"),r("oldbranch",[r("br"),t._v("要重命名的现有分支的名称。"),r("br"),r("newbranch",[r("br"),t._v("现有分支的新名称。与"),r("branchname",[t._v("相同的限制适用。"),r("br"),t._v("--sort="),r("key",[r("br"),t._v("根据给定的关键字进行排序。前缀"),r("code",[t._v("-")]),t._v("按值的降序进行排序。您可以多次使用--sort = "),r("key",[t._v("选项，在这种情况下，最后一个键变为主键。支持的密钥与中的密钥相同"),r("code",[t._v("git for-each-ref")]),t._v("。排序顺序默认为基于完整的refname（包括"),r("code",[t._v("refs/...")]),t._v("前缀）排序。这将首先列出分离的HEAD（如果存在），然后列出当地分支和最终远程跟踪分支。"),r("br"),t._v("--points-at "),r("object",[r("br"),t._v("只列出给定对象的分支。"),r("br"),t._v("--format "),r("format",[r("br"),r("code",[t._v("%(fieldname)")]),t._v("从显示的分支ref 中插入的字符串以及它指向的对象。格式与git-for-each-ref [1]的格式相同。"),r("br")])],1)])],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" "),r("p",[r("a",{attrs:{name:"0144f"}})]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://cloud.tencent.com/developer/section/1138719",target:"_blank",rel:"noopener noreferrer"}},[t._v("git prune"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);